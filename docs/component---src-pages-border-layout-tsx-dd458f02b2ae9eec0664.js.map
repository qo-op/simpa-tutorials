{"version":3,"file":"component---src-pages-border-layout-tsx-dd458f02b2ae9eec0664.js","mappings":"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","sources":["webpack://simpa-tutorials/./src/pages/border-layout.tsx"],"sourcesContent":["import React from \"react\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { vs2015 } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport Layout from \"components/Layout\";\r\nimport NoteAboutLayouts from \"components/NoteAboutLayouts\";\r\n\r\nclass BorderLayoutPage extends React.Component<{\r\n  location: any\r\n}> {\r\n  render = () => {\r\n    return (\r\n      <Layout pageTitle={\"How to Use BorderLayout with HTML and CSS\"} pathname={this.props.location.pathname}>\r\n        <h1 className=\"BoxLayout\" data-axis=\"page-axis\">\r\n          <span>How to Use BorderLayout</span>\r\n          <span>with HTML and CSS</span>\r\n        </h1>\r\n        <p>\r\n          <code>BorderLayout</code> is a type of layout manager that is used to\r\n          arrange and organize components in a container. It divides the\r\n          container into five regions: <code>page-start</code> (north),{\" \"}\r\n          <code>page-end</code> (south), <code>line-start</code> (west),{\" \"}\r\n          <code>line-end</code> (east) and <code>center</code>.\r\n        </p>\r\n        <div className=\"BorderLayout\" style={{ height: \"8rem\" }}>\r\n          <button data-constraints=\"page-start\">page-start</button>\r\n          <button data-constraints=\"line-start\">line-start</button>\r\n          <button>center</button>\r\n          <button data-constraints=\"line-end\">line-end</button>\r\n          <button data-constraints=\"page-end\">page-end</button>\r\n        </div>\r\n        <p>\r\n          When components are added to a container with{\" \"}\r\n          <code>BorderLayout</code>, they are placed in one of these five\r\n          regions according to the rules of the layout. The{\" \"}\r\n          <code>page-start</code> region is placed at the top, the{\" \"}\r\n          <code>page-end</code> region at the bottom, the{\" \"}\r\n          <code>line-start</code> region on the left side, the{\" \"}\r\n          <code>line-end</code> region on the right side and the{\" \"}\r\n          <code>center</code> region in the middle.\r\n        </p>\r\n        <p>\r\n          The components placed in the <code>page-start</code> and{\" \"}\r\n          <code>page-end</code> regions are sized to their preferred height and\r\n          stretched to the full width of the container. The components placed in\r\n          the <code>line-start</code> and <code>line-end</code> regions are\r\n          sized to their preferred width and stretched to the full height of the\r\n          container. The component placed in the <code>center</code> region is\r\n          stretched to fill the remaining space in the container.\r\n        </p>\r\n        <hr />\r\n        <h2>Example with two components</h2>\r\n        <p>\r\n          Here's an example of using <code>BorderLayout</code> to create a\r\n          simple user interface with a text and a button:\r\n        </p>\r\n        <SyntaxHighlighter language=\"xml\" style={vs2015} wrapLongLines>\r\n          {`...\\n` +\r\n            `<div class=\"BorderLayout\">\\n` +\r\n            `  <span data-constraints=\"page-start\">Hello, World!</span>\\n` +\r\n            `  <button>Click me!</button>\\n` +\r\n            `</div>\\n` +\r\n            `...`}\r\n        </SyntaxHighlighter>\r\n        <p>\r\n          In a BorderLayout, if no <code>data-constraints</code> is specified\r\n          for a component, then the component is placed in the{\" \"}\r\n          <code>center</code> region by default.\r\n        </p>\r\n        <p>\r\n          In this example, we create a <code>div</code> and set its{\" \"}\r\n          <code>class</code> to <code>\"BorderLayout\"</code>. We then add a{\" \"}\r\n          <code>span</code> that says \"Hello, World!\" to the{\" \"}\r\n          <code>page-start</code> region of the <code>div</code>. We add a{\" \"}\r\n          <code>button</code> with the text \"Click me!\" to the <code>div</code>,\r\n          without any <code>data-constraints</code>. Since we didn't specify any{\" \"}\r\n          <code>data-constraints</code>, the <code>button</code> is\r\n          automatically placed in the center region of the <code>div</code>.\r\n        </p>\r\n        <p>\r\n          When we run this code, we will see a panel with the text at the top\r\n          and the button in the center, like this:\r\n        </p>\r\n        <div className=\"BorderLayout\" style={{ backgroundColor: \"lightgray\" }}>\r\n          <span data-constraints=\"page-start\">Hello, World!</span>\r\n          <button>Click me!</button>\r\n        </div>\r\n        <p />\r\n        <hr />\r\n        <h2>Adding gaps</h2>\r\n        <p>\r\n          To create gaps between components in <code>BorderLayout</code>, you\r\n          can add a margin to the component placed in the <code>center</code>{\" \"}\r\n          region. For example, if you want to create a gap between a component\r\n          in the <code>page-start</code> region and a component in the{\" \"}\r\n          <code>center</code> region, you can add a margin to the{\" \"}\r\n          <code>center</code> component.\r\n        </p>\r\n        <SyntaxHighlighter language=\"xml\" style={vs2015} wrapLongLines>\r\n          {`...\\n` +\r\n            `<div class=\"BorderLayout\">\\n` +\r\n            `  <button data-constraints=\"page-start\">Button 1</button>\\n` +\r\n            `  <button style=\"margin-block-start: 5px\">Button 2</button>\\n` +\r\n            `</div>\\n` +\r\n            `...`}\r\n        </SyntaxHighlighter>\r\n        <p>After running this code, we will see a panel with two buttons.</p>\r\n        <div className=\"BorderLayout\" style={{ backgroundColor: \"lightgray\" }}>\r\n          <button data-constraints=\"page-start\">Button 1</button>\r\n          <button style={{ marginBlockStart: \"5px\" }}>Button 2</button>\r\n        </div>\r\n        <p />\r\n        <NoteAboutLayouts />\r\n        <p />\r\n      </Layout>\r\n    );\r\n  };\r\n}\r\n\r\nexport default BorderLayoutPage;\r\n"],"names":["BorderLayoutPage","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","render","React","Layout","pageTitle","pathname","props","location","className","style","height","SyntaxHighlighter","language","vs2015","wrapLongLines","backgroundColor","marginBlockStart","NoteAboutLayouts","_inheritsLoose"],"sourceRoot":""}