{"version":3,"file":"component---src-pages-box-layout-tsx-53a959aff51f98cb9860.js","mappings":"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","sources":["webpack://simpa-tutorials/./src/pages/box-layout.tsx"],"sourcesContent":["import React from \"react\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { vs2015 } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport Layout from \"components/Layout\";\r\nimport NoteAboutLayouts from \"components/NoteAboutLayouts\";\r\n\r\nclass BorderLayoutPage extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <Layout pageTitle={\"How to Use BoxLayout\\nwith HTML and CSS\"}>\r\n        <p>\r\n          <code>BoxLayout</code> is a layout manager that arranges components in\r\n          a single row or column. It's useful when you need to lay out\r\n          components in a specific direction, such as in a toolbar.\r\n        </p>\r\n        <hr />\r\n        <h2>Example with components arranged horizontally</h2>\r\n        <p>\r\n          To use <code>BoxLayout</code>, you first need to create a container to\r\n          hold your components. This can be a <code>div</code> element. Once you\r\n          have your container, you can set its layout manager to{\" \"}\r\n          <code>BoxLayout</code> by adding <code>\"BoxLayout\"</code> to its{\" \"}\r\n          <code>class</code> attribute.\r\n        </p>\r\n        <SyntaxHighlighter language=\"xml\" style={vs2015} wrapLongLines>\r\n          {`...\\n` +\r\n            `<div class=\"BoxLayout\"\\n` +\r\n            `     data-axis=\"line-axis\"\\n` +\r\n            `     style=\"gap: 5px;\">\\n` +\r\n            `  <button>Button</button>\\n` +\r\n            `  <button>Another<br />button</button>\\n` +\r\n            `</div>\\n` +\r\n            `...`}\r\n        </SyntaxHighlighter>\r\n        <p>\r\n          In this example, we're setting the <code>div</code>'s layout to{\" \"}\r\n          <code>BoxLayout</code> and specifying that we want components to be\r\n          laid out horizontally by setting <code>data-axis</code> to{\" \"}\r\n          <code>\"line-axis\"</code>.\r\n        </p>\r\n        <div\r\n          className=\"BoxLayout\"\r\n          data-axis=\"line-axis\"\r\n          style={{ gap: \"5px\", backgroundColor: \"lightgray\" }}\r\n        >\r\n          <button>Button</button>\r\n          <button>\r\n            Another\r\n            <br />\r\n            button\r\n          </button>\r\n        </div>\r\n        <p />\r\n        <hr />\r\n        <h2>Example with components arranged vertically</h2>\r\n        <p>\r\n          To use BoxLayout to lay out components vertically, you need to set{\" \"}\r\n          <code>data-axis</code> to <code>\"page-axis\"</code>. Here's an example:\r\n        </p>\r\n        <SyntaxHighlighter language=\"xml\" style={vs2015} wrapLongLines>\r\n          {`...\\n` +\r\n            `<div class=\"BoxLayout\"\\n` +\r\n            `     data-axis=\"page-axis\"\\n` +\r\n            `     style=\"gap: 5px;\">\\n` +\r\n            `  <button>First</button>\\n` +\r\n            `  <button>Second</button>\\n` +\r\n            `  <button>Third</button>\\n` +\r\n            `  <button>Fourth</button>\\n` +\r\n            `</div>\\n` +\r\n            `...`}\r\n        </SyntaxHighlighter>\r\n        <p>\r\n          When we run this code, we will see a panel with buttons laid out\r\n          vertically, from top to bottom, like this:\r\n        </p>\r\n        <div\r\n          className=\"BoxLayout\"\r\n          data-axis=\"page-axis\"\r\n          style={{ gap: \"5px\", backgroundColor: \"lightgray\" }}\r\n        >\r\n          <button>First</button>\r\n          <button>Second</button>\r\n          <button>Third</button>\r\n          <button>Fourth</button>\r\n        </div>\r\n        <p />\r\n        <hr />\r\n        <h2>Example with alignment set to \"stretch\"</h2>\r\n        <p>\r\n          To stretch components within a <code>BoxLayout</code> container, you\r\n          need to set the <code>data-alignment</code> to <code>\"stretch\"</code>.\r\n          If no <code>data-alignment</code> is specified, then the components\r\n          are aligned to the center of the container by default.\r\n        </p>\r\n        <p>\r\n          For example, to stretch components within a <code>BoxLayout</code>{\" \"}\r\n          container with a vertical layout, you would set the{\" \"}\r\n          <code>data-alignment</code> to <code>\"stretch\"</code>:\r\n        </p>\r\n        <SyntaxHighlighter language=\"xml\" style={vs2015} wrapLongLines>\r\n          {`...\\n` +\r\n            `<div class=\"BoxLayout\"\\n` +\r\n            `     data-axis=\"page-axis\"\\n` +\r\n            `     data-alignment=\"stretch\"\\n` +\r\n            `     style=\"gap: 5px;\">\\n` +\r\n            `  <button>First</button>\\n` +\r\n            `  <button>Second</button>\\n` +\r\n            `  <button>Third</button>\\n` +\r\n            `  <button>Fourth</button>\\n` +\r\n            `</div>\\n` +\r\n            `...`}\r\n        </SyntaxHighlighter>\r\n        <p>\r\n          After running this code, we will see a panel with stretched buttons.\r\n        </p>\r\n        <div\r\n          className=\"BoxLayout\"\r\n          data-axis=\"page-axis\"\r\n          data-alignment=\"stretch\"\r\n          style={{ gap: \"5px\", backgroundColor: \"lightgray\" }}\r\n        >\r\n          <button>First</button>\r\n          <button>Second</button>\r\n          <button>Third</button>\r\n          <button>Fourth</button>\r\n        </div>\r\n        <p></p>\r\n        <NoteAboutLayouts />\r\n        <p></p>\r\n      </Layout>\r\n    );\r\n  };\r\n}\r\n\r\nexport default BorderLayoutPage;\r\n"],"names":["BorderLayoutPage","args","_this","render","React","Layout","pageTitle","SyntaxHighlighter","language","style","vs2015","wrapLongLines","className","gap","backgroundColor","NoteAboutLayouts","_inheritsLoose"],"sourceRoot":""}