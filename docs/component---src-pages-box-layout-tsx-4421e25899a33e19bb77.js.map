{"version":3,"file":"component---src-pages-box-layout-tsx-4421e25899a33e19bb77.js","mappings":"8LAI2D,IAErDA,EAAgB,SAAAC,GAAA,SAAAD,IAAA,QAAAE,EAAAC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAmInB,OAnImBN,EAAAD,EAAAQ,KAAAC,MAAAT,EAAA,OAAAU,OAAAL,KAAA,MAGpBM,OAAS,IAELC,EAAAA,cAACC,EAAAA,EAAM,CAACC,UAAW,yCAA0CC,SAAUd,EAAKe,MAAMC,SAASF,UACzFH,EAAAA,cAAA,MAAIM,UAAU,YAAY,YAAU,aAClCN,EAAAA,cAAA,YAAM,wBACNA,EAAAA,cAAA,YAAM,sBAERA,EAAAA,cAAA,SACEA,EAAAA,cAAA,YAAM,aAAgB,2KAIxBA,EAAAA,cAAA,WACAA,EAAAA,cAAA,UAAI,iDACJA,EAAAA,cAAA,SAAG,UACMA,EAAAA,cAAA,YAAM,aAAkB,iFACKA,EAAAA,cAAA,YAAM,OAAU,4EACG,IACvDA,EAAAA,cAAA,YAAM,aAAgB,cAAWA,EAAAA,cAAA,YAAM,eAAkB,UAAQ,IACjEA,EAAAA,cAAA,YAAM,SAAY,eAEpBA,EAAAA,cAACO,EAAAA,EAAiB,CAACC,SAAS,MAAMC,MAAOC,EAAAA,EAAQC,eAAa,GAC3D,oKASHX,EAAAA,cAAA,SAAG,sCACkCA,EAAAA,cAAA,YAAM,OAAU,eAAa,IAChEA,EAAAA,cAAA,YAAM,aAAgB,kFACWA,EAAAA,cAAA,YAAM,aAAgB,MAAI,IAC3DA,EAAAA,cAAA,YAAM,eAAkB,KAE1BA,EAAAA,cAAA,OACEM,UAAU,YACV,YAAU,YACVG,MAAO,CAAEG,IAAK,MAAOC,gBAAiB,cAEtCb,EAAAA,cAAA,cAAQ,UACRA,EAAAA,cAAA,cAAQ,UAENA,EAAAA,cAAA,WAAM,WAIVA,EAAAA,cAAA,UACAA,EAAAA,cAAA,WACAA,EAAAA,cAAA,UAAI,+CACJA,EAAAA,cAAA,SAAG,qEACkE,IACnEA,EAAAA,cAAA,YAAM,aAAgB,OAAIA,EAAAA,cAAA,YAAM,eAAkB,wBAEpDA,EAAAA,cAACO,EAAAA,EAAiB,CAACC,SAAS,MAAMC,MAAOC,EAAAA,EAAQC,eAAa,GAC3D,2MAWHX,EAAAA,cAAA,SAAG,+GAIHA,EAAAA,cAAA,OACEM,UAAU,YACV,YAAU,YACVG,MAAO,CAAEG,IAAK,MAAOC,gBAAiB,cAEtCb,EAAAA,cAAA,cAAQ,SACRA,EAAAA,cAAA,cAAQ,UACRA,EAAAA,cAAA,cAAQ,SACRA,EAAAA,cAAA,cAAQ,WAEVA,EAAAA,cAAA,UACAA,EAAAA,cAAA,WACAA,EAAAA,cAAA,UAAI,2CACJA,EAAAA,cAAA,SAAG,kCAC8BA,EAAAA,cAAA,YAAM,aAAgB,mCACrCA,EAAAA,cAAA,YAAM,kBAAqB,OAAIA,EAAAA,cAAA,YAAM,aAAgB,WAC/DA,EAAAA,cAAA,YAAM,kBAAqB,6FAGnCA,EAAAA,cAAA,SAAG,+CAC2CA,EAAAA,cAAA,YAAM,aAAiB,IAAI,sDACnB,IACpDA,EAAAA,cAAA,YAAM,kBAAqB,OAAIA,EAAAA,cAAA,YAAM,aAAgB,KAEvDA,EAAAA,cAACO,EAAAA,EAAiB,CAACC,SAAS,MAAMC,MAAOC,EAAAA,EAAQC,eAAa,GAC3D,0OAYHX,EAAAA,cAAA,SAAG,wEAGHA,EAAAA,cAAA,OACEM,UAAU,YACV,YAAU,YACV,iBAAe,UACfG,MAAO,CAAEG,IAAK,MAAOC,gBAAiB,cAEtCb,EAAAA,cAAA,cAAQ,SACRA,EAAAA,cAAA,cAAQ,UACRA,EAAAA,cAAA,cAAQ,SACRA,EAAAA,cAAA,cAAQ,WAEVA,EAAAA,cAAA,UACAA,EAAAA,cAACc,EAAAA,EAAgB,MACjBd,EAAAA,cAAA,WAGLX,CAAA,QAnImB0B,EAAAA,EAAAA,GAAA5B,EAAAC,GAmInBD,CAAA,CAnImB,CAASa,EAAAA,WAsI/B,W","sources":["webpack://simpa-tutorials/./src/pages/box-layout.tsx"],"sourcesContent":["import React from \"react\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { vs2015 } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport Layout from \"components/Layout\";\r\nimport NoteAboutLayouts from \"components/NoteAboutLayouts\";\r\n\r\nclass BorderLayoutPage extends React.Component<{\r\n  location: any\r\n}> {\r\n  render = () => {\r\n    return (\r\n      <Layout pageTitle={\"How to Use BoxLayout with HTML and CSS\"} pathname={this.props.location.pathname}>\r\n        <h1 className=\"BoxLayout\" data-axis=\"page-axis\">\r\n          <span>How to Use BoxLayout</span>\r\n          <span>with HTML and CSS</span>\r\n        </h1>\r\n        <p>\r\n          <code>BoxLayout</code> is a layout manager that arranges components in\r\n          a single row or column. It's useful when you need to lay out\r\n          components in a specific direction, such as in a toolbar.\r\n        </p>\r\n        <hr />\r\n        <h2>Example with components arranged horizontally</h2>\r\n        <p>\r\n          To use <code>BoxLayout</code>, you first need to create a container to\r\n          hold your components. This can be a <code>div</code> element. Once you\r\n          have your container, you can set its layout manager to{\" \"}\r\n          <code>BoxLayout</code> by adding <code>\"BoxLayout\"</code> to its{\" \"}\r\n          <code>class</code> attribute.\r\n        </p>\r\n        <SyntaxHighlighter language=\"xml\" style={vs2015} wrapLongLines>\r\n          {`...\\n` +\r\n            `<div class=\"BoxLayout\"\\n` +\r\n            `     data-axis=\"line-axis\"\\n` +\r\n            `     style=\"gap: 5px;\">\\n` +\r\n            `  <button>Button</button>\\n` +\r\n            `  <button>Another<br />button</button>\\n` +\r\n            `</div>\\n` +\r\n            `...`}\r\n        </SyntaxHighlighter>\r\n        <p>\r\n          In this example, we're setting the <code>div</code>'s layout to{\" \"}\r\n          <code>BoxLayout</code> and specifying that we want components to be\r\n          laid out horizontally by setting <code>data-axis</code> to{\" \"}\r\n          <code>\"line-axis\"</code>.\r\n        </p>\r\n        <div\r\n          className=\"BoxLayout\"\r\n          data-axis=\"line-axis\"\r\n          style={{ gap: \"5px\", backgroundColor: \"lightgray\" }}\r\n        >\r\n          <button>Button</button>\r\n          <button>\r\n            Another\r\n            <br />\r\n            button\r\n          </button>\r\n        </div>\r\n        <p />\r\n        <hr />\r\n        <h2>Example with components arranged vertically</h2>\r\n        <p>\r\n          To use BoxLayout to lay out components vertically, you need to set{\" \"}\r\n          <code>data-axis</code> to <code>\"page-axis\"</code>. Here's an example:\r\n        </p>\r\n        <SyntaxHighlighter language=\"xml\" style={vs2015} wrapLongLines>\r\n          {`...\\n` +\r\n            `<div class=\"BoxLayout\"\\n` +\r\n            `     data-axis=\"page-axis\"\\n` +\r\n            `     style=\"gap: 5px;\">\\n` +\r\n            `  <button>First</button>\\n` +\r\n            `  <button>Second</button>\\n` +\r\n            `  <button>Third</button>\\n` +\r\n            `  <button>Fourth</button>\\n` +\r\n            `</div>\\n` +\r\n            `...`}\r\n        </SyntaxHighlighter>\r\n        <p>\r\n          When we run this code, we will see a panel with buttons laid out\r\n          vertically, from top to bottom, like this:\r\n        </p>\r\n        <div\r\n          className=\"BoxLayout\"\r\n          data-axis=\"page-axis\"\r\n          style={{ gap: \"5px\", backgroundColor: \"lightgray\" }}\r\n        >\r\n          <button>First</button>\r\n          <button>Second</button>\r\n          <button>Third</button>\r\n          <button>Fourth</button>\r\n        </div>\r\n        <p />\r\n        <hr />\r\n        <h2>Example with alignment set to \"stretch\"</h2>\r\n        <p>\r\n          To stretch components within a <code>BoxLayout</code> container, you\r\n          need to set the <code>data-alignment</code> to <code>\"stretch\"</code>.\r\n          If no <code>data-alignment</code> is specified, then the components\r\n          are aligned to the center of the container by default.\r\n        </p>\r\n        <p>\r\n          For example, to stretch components within a <code>BoxLayout</code>{\" \"}\r\n          container with a vertical layout, you would set the{\" \"}\r\n          <code>data-alignment</code> to <code>\"stretch\"</code>:\r\n        </p>\r\n        <SyntaxHighlighter language=\"xml\" style={vs2015} wrapLongLines>\r\n          {`...\\n` +\r\n            `<div class=\"BoxLayout\"\\n` +\r\n            `     data-axis=\"page-axis\"\\n` +\r\n            `     data-alignment=\"stretch\"\\n` +\r\n            `     style=\"gap: 5px;\">\\n` +\r\n            `  <button>First</button>\\n` +\r\n            `  <button>Second</button>\\n` +\r\n            `  <button>Third</button>\\n` +\r\n            `  <button>Fourth</button>\\n` +\r\n            `</div>\\n` +\r\n            `...`}\r\n        </SyntaxHighlighter>\r\n        <p>\r\n          After running this code, we will see a panel with stretched buttons.\r\n        </p>\r\n        <div\r\n          className=\"BoxLayout\"\r\n          data-axis=\"page-axis\"\r\n          data-alignment=\"stretch\"\r\n          style={{ gap: \"5px\", backgroundColor: \"lightgray\" }}\r\n        >\r\n          <button>First</button>\r\n          <button>Second</button>\r\n          <button>Third</button>\r\n          <button>Fourth</button>\r\n        </div>\r\n        <p></p>\r\n        <NoteAboutLayouts />\r\n        <p></p>\r\n      </Layout>\r\n    );\r\n  };\r\n}\r\n\r\nexport default BorderLayoutPage;\r\n"],"names":["BorderLayoutPage","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","render","React","Layout","pageTitle","pathname","props","location","className","SyntaxHighlighter","language","style","vs2015","wrapLongLines","gap","backgroundColor","NoteAboutLayouts","_inheritsLoose"],"sourceRoot":""}