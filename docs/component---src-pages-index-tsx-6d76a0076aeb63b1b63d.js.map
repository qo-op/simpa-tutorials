{"version":3,"file":"component---src-pages-index-tsx-6d76a0076aeb63b1b63d.js","mappings":"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","sources":["webpack://simpa-tutorials/./src/components/ModalLayer.tsx","webpack://simpa-tutorials/./src/components/MessageDialog.tsx","webpack://simpa-tutorials/./src/components/OptionPane.tsx","webpack://simpa-tutorials/./src/components/AboutMenuItem.tsx","webpack://simpa-tutorials/./src/components/HelpMenu.tsx","webpack://simpa-tutorials/./src/components/MenuBar.tsx","webpack://simpa-tutorials/./src/components/SplitPane.tsx","webpack://simpa-tutorials/./src/components/NavigationTree.tsx","webpack://simpa-tutorials/./src/components/Layout.tsx","webpack://simpa-tutorials/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\r\n\r\nclass ModalLayer extends React.Component {\r\n  static modalLayerRef: React.RefObject<Component> = React.createRef();\r\n  static show = (dialog: JSX.Element) => {\r\n    ModalLayer.modalLayerRef.current?.show(dialog);\r\n  };\r\n  static hide = () => {\r\n    ModalLayer.modalLayerRef.current?.hide();\r\n  };\r\n  static dispose = () => {\r\n    ModalLayer.modalLayerRef.current?.dispose();\r\n  };\r\n  render() {\r\n    return <Component ref={ModalLayer.modalLayerRef} />;\r\n  }\r\n}\r\n\r\nclass Component extends React.Component<{}, { visible: boolean }> {\r\n  dialog: JSX.Element = (<></>);\r\n  constructor(props: {}) {\r\n    super(props);\r\n    this.state = { visible: false };\r\n  }\r\n  show = (dialog: JSX.Element) => {\r\n    this.dialog = dialog;\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n  hide = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n  dispose = () => {\r\n    this.setState({ visible: false });\r\n    this.dialog = <></>;\r\n  };\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"ModalLayer\"\r\n        style={{ visibility: this.state.visible ? \"visible\" : \"hidden\" }}\r\n      >\r\n        {this.dialog}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalLayer;\r\n","import React from \"react\";\r\nimport ModalLayer from \"components/ModalLayer\";\r\n\r\nclass MessageDialog extends React.Component<{\r\n  message: string;\r\n  title: string;\r\n}> {\r\n  hide = () => {\r\n    ModalLayer.hide();\r\n  };\r\n  dispose = () => {\r\n    ModalLayer.dispose();\r\n  };\r\n  move = (ev: React.PointerEvent<HTMLDivElement>) => {\r\n    const target: HTMLElement = ev.target as HTMLElement;\r\n    const dialog: HTMLElement = ev.currentTarget as HTMLElement;\r\n    const dialogTopPane: HTMLElement = dialog.firstElementChild as HTMLElement;\r\n    if (!dialogTopPane.contains(target) || target.onclick) {\r\n      return;\r\n    }\r\n    var rect = dialog.getBoundingClientRect();\r\n    let x = ev.clientX - rect.left;\r\n    let y = ev.clientY - rect.top;\r\n    const dragLayer = document.createElement(\"div\");\r\n    document.body.appendChild(dragLayer);\r\n    dragLayer.classList.add(\"DragLayer\");\r\n    const dragLayerEventListener = {\r\n      pointermove(ev: MouseEvent) {\r\n        dialog.style.left = ev.clientX - x + \"px\";\r\n        dialog.style.top = ev.clientY - y + \"px\";\r\n      },\r\n      pointerup(ev: MouseEvent) {\r\n        dragLayer.remove();\r\n      },\r\n      pointerleave(ev: MouseEvent) {\r\n        dragLayer.remove();\r\n      },\r\n    };\r\n    dragLayer.addEventListener(\r\n      \"pointermove\",\r\n      dragLayerEventListener.pointermove\r\n    );\r\n    dragLayer.addEventListener(\"pointerup\", dragLayerEventListener.pointerup);\r\n    dragLayer.addEventListener(\r\n      \"pointerleave\",\r\n      dragLayerEventListener.pointerleave\r\n    );\r\n  };\r\n  render = () => {\r\n    return (\r\n      <div\r\n        className=\"MessageDialog Dialog PageStartBorderLayout\"\r\n        onPointerDown={this.move}\r\n      >\r\n        <div className=\"LineEndBorderLayout\" style={{ alignItems: \"center\" }}>\r\n          <span>\r\n            <b>{this.props.title}</b>\r\n          </span>\r\n          <span className=\"material-icons close\" onClick={this.dispose}></span>\r\n        </div>\r\n        <div\r\n          className=\"PageEndBorderLayout\"\r\n          style={{ gap: \"5px\", padding: \"5px\" }}\r\n        >\r\n          <span>{this.props.message}</span>\r\n          <div className=\"CenterLayout\">\r\n            <button onClick={this.dispose}>OK</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default MessageDialog;\r\n","import React from \"react\";\r\nimport ModalLayer from \"components/ModalLayer\";\r\nimport MessageDialog from \"components/MessageDialog\";\r\n\r\nclass OptionPane {\r\n  static showMessage = (message: string, title: string = \"Message\") => {\r\n    ModalLayer.show(<MessageDialog message={message} title={title} />);\r\n  };\r\n}\r\n\r\nexport default OptionPane;\r\n","import React from \"react\";\r\nimport OptionPane from \"components/OptionPane\";\r\n\r\nclass AboutMenuItem extends React.Component {\r\n  pointerUp = () => {\r\n    OptionPane.showMessage(\"Simpa tutorials\");\r\n  };\r\n  render = () => {\r\n    return (\r\n      <li>\r\n        <div className=\"MenuItem\" onPointerUp={this.pointerUp}>\r\n          <span></span>\r\n          <span>About</span>\r\n          <span></span>\r\n        </div>\r\n      </li>\r\n    );\r\n  };\r\n}\r\n\r\nexport default AboutMenuItem;\r\n","import React from \"react\";\r\nimport AboutMenuItem from \"components/AboutMenuItem\";\r\n\r\nclass HelpMenu extends React.Component {\r\n  render() {\r\n    return (\r\n      <li>\r\n        <div className=\"Menu\">\r\n          <span>Help</span>\r\n        </div>\r\n        <ul>\r\n          <AboutMenuItem />\r\n        </ul>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HelpMenu;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport HelpMenu from \"components/HelpMenu\";\r\n\r\nclass MenuBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <ul className=\"MenuBar StretchBoxLayout\">\r\n        <li>\r\n          <Link to=\"/\" className=\"Menu\">\r\n            <span>Simpa Tutorials</span>\r\n          </Link>\r\n        </li>\r\n        <HelpMenu />\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuBar;\r\n","import React from \"react\";\r\n\r\nclass SplitPane extends React.Component<{ children: React.ReactNode[] }> {\r\n  drag = (ev: React.PointerEvent) => {\r\n    const divider = ev.currentTarget;\r\n    const splitPane: HTMLElement = divider.parentElement as HTMLElement;\r\n    const leftComponent: HTMLElement = splitPane.children[0] as HTMLElement;\r\n    const rightComponent: HTMLElement = splitPane.children[2] as HTMLElement;\r\n    const leftComponentRect: DOMRect = leftComponent.getBoundingClientRect();\r\n    const rightComponentRect: DOMRect = rightComponent.getBoundingClientRect();\r\n    const leftComponentComputedStyle: CSSStyleDeclaration =\r\n      getComputedStyle(leftComponent);\r\n    const rightComponentComputedStyle: CSSStyleDeclaration =\r\n      getComputedStyle(rightComponent);\r\n    const verticalSplit: boolean =\r\n      splitPane.dataset.orientation === \"vertical-split\";\r\n    const pageEndSplitPane: boolean =\r\n      splitPane.dataset.dividerAnchor === \"page-end\";\r\n    const lineEndSplitPane: boolean =\r\n      splitPane.dataset.dividerAnchor === \"line-end\";\r\n    let offset: number = 0;\r\n    let maximumDividerLocation: number = 0;\r\n    if (verticalSplit) {\r\n      if (pageEndSplitPane) {\r\n        offset = ev.clientY + rightComponentRect.height;\r\n      } else {\r\n        offset = ev.clientY - leftComponentRect.height;\r\n      }\r\n      maximumDividerLocation =\r\n        leftComponentRect.height -\r\n        +leftComponentComputedStyle.borderTopWidth.replace(\"px\", \"\") -\r\n        +leftComponentComputedStyle.borderBottomWidth.replace(\"px\", \"\");\r\n      maximumDividerLocation +=\r\n        rightComponentRect.height -\r\n        +rightComponentComputedStyle.borderTopWidth.replace(\"px\", \"\") -\r\n        +rightComponentComputedStyle.borderBottomWidth.replace(\"px\", \"\");\r\n    } else {\r\n      if (lineEndSplitPane) {\r\n        offset = ev.clientX + rightComponentRect.width;\r\n      } else {\r\n        offset = ev.clientX - leftComponentRect.width;\r\n      }\r\n      maximumDividerLocation =\r\n        leftComponentRect.width -\r\n        +leftComponentComputedStyle.borderLeftWidth.replace(\"px\", \"\") -\r\n        +leftComponentComputedStyle.borderRightWidth.replace(\"px\", \"\");\r\n      maximumDividerLocation +=\r\n        rightComponentRect.width -\r\n        +rightComponentComputedStyle.borderLeftWidth.replace(\"px\", \"\") -\r\n        +rightComponentComputedStyle.borderRightWidth.replace(\"px\", \"\");\r\n    }\r\n    const dragLayer: HTMLElement = document.createElement(\"div\");\r\n    dragLayer.classList.add(\"DragLayer\");\r\n    if (verticalSplit) {\r\n      dragLayer.style.cursor = \"ns-resize\";\r\n    } else {\r\n      dragLayer.style.cursor = \"ew-resize\";\r\n    }\r\n    document.body.appendChild(dragLayer);\r\n    const dragLayerEventListener = {\r\n      pointermove(ev: PointerEvent) {\r\n        if (verticalSplit) {\r\n          if (pageEndSplitPane) {\r\n            const location = Math.min(\r\n              Math.max(offset - ev.clientY, 0),\r\n              maximumDividerLocation\r\n            );\r\n            rightComponent.style.height = location + \"px\";\r\n          } else {\r\n            const location = Math.min(\r\n              Math.max(ev.clientY - offset, 0),\r\n              maximumDividerLocation\r\n            );\r\n            leftComponent.style.height = location + \"px\";\r\n          }\r\n        } else {\r\n          if (lineEndSplitPane) {\r\n            const location = Math.min(\r\n              Math.max(offset - ev.clientX, 0),\r\n              maximumDividerLocation\r\n            );\r\n            rightComponent.style.width = location + \"px\";\r\n          } else {\r\n            const location = Math.min(\r\n              Math.max(ev.clientX - offset, 0),\r\n              maximumDividerLocation\r\n            );\r\n            leftComponent.style.width = location + \"px\";\r\n          }\r\n        }\r\n      },\r\n      pointerup(ev: PointerEvent) {\r\n        dragLayer.remove();\r\n      },\r\n      pointerleave(ev: PointerEvent) {\r\n        dragLayer.remove();\r\n      },\r\n    };\r\n    dragLayer.addEventListener(\r\n      \"pointermove\",\r\n      dragLayerEventListener.pointermove\r\n    );\r\n    dragLayer.addEventListener(\"pointerup\", dragLayerEventListener.pointerup);\r\n    dragLayer.addEventListener(\r\n      \"pointerleave\",\r\n      dragLayerEventListener.pointerleave\r\n    );\r\n  };\r\n  render = () => {\r\n    return (\r\n      <div className=\"SplitPane\">\r\n        <div className=\"ScrollPane\">{this.props.children[0]}</div>\r\n        <div\r\n          style={{\r\n            position: \"relative\",\r\n            borderInlineStart: \"1px solid gray\",\r\n          }}\r\n          onPointerDown={this.drag}\r\n        >\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              insetInlineStart: \"-6px\",\r\n              width: \"11px\",\r\n              height: \"100%\",\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <div className=\"ScrollPane\">{this.props.children[1]}</div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default SplitPane;\r\n","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nclass NavigationTree extends React.Component {\r\n  expandOrCollapse = (ev: React.MouseEvent) => {\r\n    const treeNode: HTMLElement = ev.currentTarget as HTMLElement;\r\n    const li: HTMLElement = treeNode.parentElement as HTMLElement;\r\n    if (li.dataset.folder === \"open\") {\r\n        li.dataset.folder = \"closed\";\r\n    } else {\r\n        li.dataset.folder = \"open\";\r\n    }\r\n  }\r\n  render = () => {\r\n    return (\r\n      <ul\r\n        className=\"NavigationTree Tree\"\r\n        data-selection-mode=\"single-tree-selection\"\r\n      >\r\n        <li data-folder=\"open\">\r\n          <div className=\"TreeNode\" onClick={this.expandOrCollapse}>\r\n            <span className=\"material-icons folder\"></span>\r\n            <span>Layouts</span>\r\n          </div>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/border-layout\" className=\"TreeNode\">\r\n                <span className=\"material-icons\"></span>\r\n                <span>How to Use BorderLayout</span>\r\n              </Link>\r\n            </li>\r\n            {/*\r\n            <li>\r\n              <Link to=\"/box-layout\" className=\"TreeNode\">\r\n                <span className=\"material-icons icon\"></span>\r\n                <span>How to Use BoxLayout</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/card-layout\" className=\"TreeNode\">\r\n                <span className=\"material-icons icon\"></span>\r\n                <span>How to Use CardLayout</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/flow-layout\" className=\"TreeNode\">\r\n                <span className=\"material-icons icon\"></span>\r\n                <span>How to Use FlowLayout</span>\r\n              </Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/grid-bag-layout\" className=\"TreeNode\">\r\n                <span className=\"material-icons icon\"></span>\r\n                <span>How to Use GridBagLayout</span>\r\n              </Link>\r\n            </li>\r\n          */}\r\n          </ul>\r\n        </li>\r\n        {/*\r\n        <li data-folder=\"open\">\r\n          <div className=\"TreeNode\" onClick={this.expandOrCollapse}>\r\n            <span className=\"material-icons icon\"></span>\r\n            <span>Components</span>\r\n          </div>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/menu\" className=\"TreeNode\">\r\n                <span className=\"material-icons icon\"></span>\r\n                <span>How to Use Menus</span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        */}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavigationTree;\r\n","import * as React from \"react\";\r\nimport MenuBar from \"components/MenuBar\";\r\nimport SplitPane from \"components/SplitPane\"\r\nimport NavigationTree from \"components/NavigationTree\";\r\nimport ModalLayer from \"components/ModalLayer\";\r\nimport \"./simpa.css\";\r\nimport \"./Layout.css\";\r\n\r\nclass Layout extends React.Component<{\r\n  pageTitle: string;\r\n  children: React.ReactNode;\r\n}> {\r\n  render = () => {\r\n    return (\r\n      <div className=\"Layout BorderLayout\">\r\n        <div className=\"PageStartBorderLayout\">\r\n          <div className=\"LineBorderLayout\">\r\n            <div className=\"StretchBoxLayout\">\r\n              <MenuBar />\r\n            </div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n          <SplitPane>\r\n            <nav>\r\n              <NavigationTree />\r\n            </nav>\r\n            <div className=\"Tutorial CenterLayout\">\r\n              <div className=\"CenterLayout\">\r\n                <h1>{this.props.pageTitle}</h1>\r\n              </div>\r\n              <div>{this.props.children}</div>\r\n            </div>\r\n          </SplitPane>\r\n        </div>\r\n        <ModalLayer />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport type { HeadFC } from \"gatsby\";\r\nimport Layout from \"components/Layout\";\r\n\r\nconst pageTitle: string = \"Simpa Tutorials\";\r\n\r\nclass IndexPage extends React.Component {\r\n  render = () => {\r\n    return (\r\n      <Layout pageTitle={pageTitle}>\r\n        <p>\r\n          Simpa is a user interface library that assists developers to create\r\n          Single-Page Applications. Simpa provides a set of layouts and\r\n          components for building graphical user interfaces.\r\n        </p>\r\n        <p>\r\n          In this series of tutorials, we will explore the basics of Simpa and\r\n          how to use it in Single-Page Applications. We will cover topics such\r\n          as:\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            How to use layout managers to arrange components on the screen\r\n          </li>\r\n          <li>\r\n            The fundamentals of Simpa composite components, such as menus, split\r\n            panes, tabbed panes, tables and trees\r\n          </li>\r\n        </ul>\r\n        <p>\r\n          Throughout these tutorials, we will use practical examples and code\r\n          snippets to illustrate each concept.\r\n        </p>\r\n      </Layout>\r\n    );\r\n  };\r\n}\r\n\r\nexport const Head: HeadFC = () => (\r\n  <>\r\n    <title>{pageTitle}</title>\r\n    <script src=\"https://qo-op.github.io/simpa/simpa.js\"></script>\r\n  </>\r\n);\r\n\r\nexport default IndexPage;\r\n"],"names":["ModalLayer","render","React","Component","ref","modalLayerRef","show","dialog","current","_ModalLayer$modalLaye","hide","_ModalLayer$modalLaye2","dispose","_ModalLayer$modalLaye3","props","_this","setState","visible","state","className","style","visibility","this","MessageDialog","move","ev","target","currentTarget","firstElementChild","contains","onclick","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","dragLayer","document","createElement","body","appendChild","classList","add","dragLayerEventListener","pointermove","pointerup","remove","pointerleave","addEventListener","onPointerDown","alignItems","title","onClick","gap","padding","message","OptionPane","showMessage","AboutMenuItem","pointerUp","onPointerUp","HelpMenu","MenuBar","Link","to","SplitPane","drag","splitPane","parentElement","leftComponent","children","rightComponent","leftComponentRect","rightComponentRect","leftComponentComputedStyle","getComputedStyle","rightComponentComputedStyle","verticalSplit","dataset","orientation","pageEndSplitPane","dividerAnchor","lineEndSplitPane","offset","maximumDividerLocation","height","borderTopWidth","replace","borderBottomWidth","width","borderLeftWidth","borderRightWidth","cursor","location","Math","min","max","position","borderInlineStart","insetInlineStart","NavigationTree","expandOrCollapse","li","folder","Layout","pageTitle","IndexPage","args","_inheritsLoose","Head","src"],"sourceRoot":""}