diff --git a/src/pages/border-layout.tsx b/src/pages/border-layout.tsx
index ea8fb07..df5a379 100644
--- a/src/pages/border-layout.tsx
+++ b/src/pages/border-layout.tsx
@@ -1,3 +1,4 @@
+import CopyToClipboardSyntaxHighlighter from "components/CopyToClipboardSyntaxHighlighter";
 import Layout from "components/Layout";
 import NoteAboutSimpaCSS from "components/NoteAboutSimpaCSS";
 import { SEO } from "components/SEO";
@@ -22,10 +23,10 @@ const BorderLayoutPage = ({ path }: PageProps) => {
         <span>with HTML and CSS</span>
       </h1>
       <p>
-        <code>BorderLayout</code> is a type of layout manager that is used to
-        arrange and organize components in a container. It divides the container
-        into five regions: <code>PageStart</code>, <code>PageEnd</code>,{" "}
-        <code>LineStart</code>, <code>LineEnd</code> and <code>Center</code>.
+        <code>BorderLayout</code> is a type of layout manager that organizes and
+        arranges components within a container. It divides the container into
+        five regions: <code>PageStart</code>, <code>PageEnd</code>,{" "}
+        <code>LineStart</code>, <code>LineEnd</code>, and <code>Center</code>.
       </p>
       <div className="BorderLayout" style={{ height: "200px" }}>
         <div className="PageStart">
@@ -63,83 +64,109 @@ const BorderLayoutPage = ({ path }: PageProps) => {
       <h2>Example with Two Components</h2>
       <p>
         Here's an example of using <code>BorderLayout</code> to create a simple
-        user interface with a text and a button:
+        user interface with two buttons:
       </p>
       <div className="SyntaxHighlighter">
-        <SyntaxHighlighter language="xml" style={vs2015} wrapLongLines>
-          {`...
-<div class="BorderLayout"
-     style="height: 100px;">
-  <div class="PageStart">
-    <span>Hello, World!</span>
+        <CopyToClipboardSyntaxHighlighter
+          language="html"
+          style={vs2015}
+          wrapLongLines
+        >
+          {`<!DOCTYPE html>
+<html>
+<head>
+  <link rel="stylesheet"
+        href="https://qo-op.github.io/simpa/simpa.css">
+</head>
+<body class="Frame">
+  <!-- Container with BorderLayout -->
+  <div class="BorderLayout">
+    <!-- PageStart -->
+    <div class="PageStart">
+      <button>Button 1</button>
+    </div>
+    <!-- Center -->
+    <button>Button 2</button>
   </div>
-  <button>Click me!</button>
-</div>
-...`}
-        </SyntaxHighlighter>
+</body>
+</html>
+`}
+        </CopyToClipboardSyntaxHighlighter>
       </div>
       <p>
         To specify a region for a component, wrap the component in a{" "}
-        <code>div</code> element with the <code>class</code> attribute set to{" "}
+        <code>&lt;div&gt;</code> element with the class attribute set to{" "}
         <code>"PageStart"</code>, <code>"PageEnd"</code>,{" "}
-        <code>"LineStart"</code> or <code>"LineEnd"</code> regions.
+        <code>"LineStart"</code>, <code>"LineEnd"</code>, or{" "}
+        <code>"Center"</code>.
       </p>
       <p>
         If no region is specified for a component, then the component is placed
         in the <code>Center</code> region by default.
       </p>
       <p>
-        In this example, we create a <code>div</code> container with{" "}
-        <code>style="height: 100px;"</code> and set its <code>class</code> to{" "}
-        <code>"BorderLayout"</code>. We then add a wrapped <code>span</code>{" "}
-        that says <code>"Hello, World!"</code> to the <code>PageStart</code>{" "}
-        region of the container. We add a <code>button</code> with the text "
-        <code>Click me!</code>" to the container. Since we didn't specify any
-        region, the <code>button</code> is automatically placed in the{" "}
-        <code>Center</code> region of the container.
+        In the above example, we create a <code>&lt;div&gt;</code> container
+        with the class set to <code>"BorderLayout"</code>. We then add a{" "}
+        <code>&lt;button&gt;</code> with the text <code>"Button 1"</code>{" "}
+        wrapped in a <code>&lt;div&gt;</code> to the PageStart region of the
+        container. Lastly, we add another <code>&lt;button&gt;</code> with the
+        text <code>"Button 2"</code> to the container. Since we didn't specify
+        any region, the second button is automatically placed in the Center
+        region of the container.
       </p>
       <p>
-        When we you this code, you will see a panel with the text at the top and
-        the button in the center, like this:
+        When you use this code, you will see a panel with "Button 1" at the top
+        and "Button 2" in the center, like this:
       </p>
       <div
         className="BorderLayout"
         style={{ height: "100px", backgroundColor: "LightGray" }}
       >
         <div className="PageStart">
-          <span>Hello, World!</span>
+          <button>Button 1</button>
         </div>
-        <button>Click me!</button>
+        <button>Button 2</button>
       </div>
       <p></p>
       <hr />
       <h2>Creating Component Gaps</h2>
       <p>
         To create gaps between components in <code>BorderLayout</code>, you can
-        add margins to its components. For example, if you want to create a gap
-        between a component in the <code>page-start</code> region and a
-        component in the <code>center</code> region, you can add a margin as
-        follow:
+        add margins to the respective components. For example, if you want to
+        create a gap between a component in the PageStart region and a component
+        in the Center region, you can add a margin as follows:
       </p>
       <div className="SyntaxHighlighter">
-        <SyntaxHighlighter language="xml" style={vs2015} wrapLongLines>
-          {`...
-<div class="BorderLayout"
-     style="height: 100px;">
-  <div class="PageStart"
-       style="margin: 0 0 10px 0">
-    <button>Button 1</button>
+        <CopyToClipboardSyntaxHighlighter
+          language="html"
+          style={vs2015}
+          wrapLongLines
+        >
+          {`<!DOCTYPE html>
+<html>
+<head>
+  <link rel="stylesheet"
+        href="https://qo-op.github.io/simpa/simpa.css">
+</head>
+<body class="Frame">
+  <!-- Container with Border Layout -->
+  <div class="BorderLayout">
+    <!-- Page Start with Margin -->
+    <div class="PageStart"
+         style="margin: 0 0 10px 0">
+      <button>Button 1</button>
+    </div>
+    <!-- Center -->
+    <button>Button 2</button>
   </div>
-  <button>
-    Button 2
-  </button>
-</div>
-...`}
-        </SyntaxHighlighter>
+</body>
+</html>
+`}
+        </CopyToClipboardSyntaxHighlighter>
       </div>
       <p>
-        After running this code, you will see a panel with two buttons with a
-        gap between them.
+        After running this code, you will see a panel with two buttons and a gap
+        between them:
       </p>
       <div
         className="BorderLayout"
@@ -150,7 +177,11 @@ const BorderLayoutPage = ({ path }: PageProps) => {
         </div>
         <button>Button 2</button>
       </div>
-      <p></p>
+      <p>
+        Remember that you can apply margins to any region within BorderLayout to
+        create gaps as needed. It provides flexibility in adjusting the spacing
+        between components
+      </p>
       <NoteAboutSimpaCSS subject="Simpa CSS Layouts" />
     </Layout>
   );
